//SENSORES E MOTORES
#define MD OUT_B //motor da direita
#define ME OUT_A //motor da esquerda
#define MP OUT_C //motor da porta
#define USD IN_1 //Utrasonico da direita
#define USE IN_2 //Utrasonico da esquerda
#define HTD IN_3//hitech da direita
#define HTE IN_4//hitech da esquerda

//Declaração de funções
int distanciaTachoCount(int grau);
int distanciaGiro(int grau);

void andaReto1();
void andaReto2();
void andaReto3();
void AndaReto();
void Regula(int iteracoes);

//Declaração de variáveis globais
int poteGlobal = 90;
int potdGlobal = 80;

task main(){
    //andaReto3();
    AndaReto();
}


int distanciaTachoCount(int grau){
     return (3*grau);                   //Distancia a ser percorrid/Raio da roda
}

int distanciaGiro(int grau){
     return (((grau*17)/149)); // COMO FOI FEITA ESSA CONVERSÃO??? [na base da tentativa e erro]
}



void andaReto1(){  // função que faz ele andar reto aumentando a potência do motor mais lento
        int potd, pote;

        potd = 70;
        pote = 70;

        OnFwd(MD, potd);
        OnFwd(ME, pote);
        Wait(200);
        
        if(MotorTachoCount(MD) > MotorTachoCount(ME)){
          while(MotorTachoCount(MD) > MotorTachoCount(ME))
          {
             pote+=5;
             if(pote>=90){
                          //PAU!!!
                          Off(MD);
                          Off(ME);
                          while(1){}
             }
              OnFwd(MD, potd);
              OnFwd(ME, pote);
              Wait(200);
          }

        }
        else{
           while(MotorTachoCount(MD) < MotorTachoCount(ME))
           {
             potd+=5;
             if(potd>=90){
                          //PAU!!!
                           Off(MD);
                          Off(ME);
                          while(1){}
             }
              OnFwd(MD, potd);
              OnFwd(ME, pote);
              Wait(200);
           }

        }
        
       // Off(MD);
        //Off(ME);
        NumOut(0, LCD_LINE1, MotorTachoCount(MD));
        NumOut(0, LCD_LINE2, MotorTachoCount(ME));
        NumOut(0, LCD_LINE3, potd);
        NumOut(0, LCD_LINE4, pote);
        
        OnFwd(MD, potd);
        OnFwd(ME, pote);
        Wait(10000);
        
        ClearScreen();
        NumOut(0, LCD_LINE1, MotorTachoCount(MD));
        NumOut(0, LCD_LINE2, MotorTachoCount(ME));
        NumOut(0, LCD_LINE3, potd);
        NumOut(0, LCD_LINE4, pote);
        Off(MD);
        Off(ME);
        
        while(1){}
}

void andaReto2(){  // função que faz ele andar reto reduzindo a potência do motor mais rápido
        int potd, pote;

        potd = 90;
        pote = 90;

        OnFwd(MD, potd);
        OnFwd(ME, pote);
        Wait(250);

        if(MotorTachoCount(MD) > MotorTachoCount(ME)){
          while(MotorTachoCount(MD) > MotorTachoCount(ME))
          {
             potd-=1;

              OnFwd(MD, potd);
              OnFwd(ME, pote);
              Wait(200);
          }

        }
        else{
           while(MotorTachoCount(MD) < MotorTachoCount(ME))
           {
             pote-=1;

              OnFwd(MD, potd);
              OnFwd(ME, pote);
              Wait(200);
           }

        }

       // Off(MD);
        //Off(ME);
        NumOut(0, LCD_LINE1, MotorTachoCount(MD));
        NumOut(0, LCD_LINE2, MotorTachoCount(ME));
        NumOut(0, LCD_LINE3, potd);
        NumOut(0, LCD_LINE4, pote);

        OnFwd(MD, potd);
        OnFwd(ME, pote);
        Wait(10000);

        ClearScreen();
        NumOut(0, LCD_LINE1, MotorTachoCount(MD));
        NumOut(0, LCD_LINE2, MotorTachoCount(ME));
        NumOut(0, LCD_LINE3, potd);
        NumOut(0, LCD_LINE4, pote);

        TextOut(0, LCD_LINE5, "POkemon");
        Off(MD);
        Off(ME);

        while(1){}
}

void andaReto3(){


        int potd, pote, tachoD = 0, tachoE = 0;
        long tempo_ant, tempo_atual = 0;
        potd = 90;
        pote = 90;

        tempo_ant = CurrentTick();
        OnFwd(MD, potd);
        OnFwd(ME, pote);
        Wait(350);


        if(MotorTachoCount(MD) > MotorTachoCount(ME)){
            potd -= 8;
            for(int c = 4; c >= 1; c/=2){
                    OnFwd(MD, potd);
                    OnFwd(ME, pote);
                    Wait(250);
                    if(MotorTachoCount(MD) == MotorTachoCount(ME)){
                       c = 0;
                    }else if(MotorTachoCount(MD) > MotorTachoCount(ME)){
                          potd -= c;
                    }else{
                         potd += c;
                    }
             }

        }else if(MotorTachoCount(MD) < MotorTachoCount(ME)){
            pote -= 8;
            for(int c = 4; c >= 1; c/=2){
                    OnFwd(MD, potd);
                    OnFwd(ME, pote);
                    Wait(250);
                    if(MotorTachoCount(MD) == MotorTachoCount(ME)){
                       c = 0;
                    }else if(MotorTachoCount(ME) > MotorTachoCount(MD)){
                          pote -= c;
                    }else{
                         pote += c;
                    }
             }
        }

        tempo_atual = CurrentTick() - tempo_ant;
        TextOut(0, LCD_LINE6, "TEMPO DELAY");
        NumOut(0, LCD_LINE7, tempo_atual);
        
        NumOut(0, LCD_LINE1, MotorTachoCount(MD));
        NumOut(0, LCD_LINE2, MotorTachoCount(ME));
        NumOut(0, LCD_LINE3, potd);
        NumOut(0, LCD_LINE4, pote);

        OnFwd(MD, potd);
        OnFwd(ME, pote);

        
        while(distanciaTachoCount((tachoD + tachoE)/2 ) < 300*100){
          tachoD = MotorTachoCount(MD);
          tachoE = MotorTachoCount(ME);
        }

        ClearScreen();
        NumOut(0, LCD_LINE1, MotorTachoCount(MD));
        NumOut(0, LCD_LINE2, MotorTachoCount(ME));
        NumOut(0, LCD_LINE3, potd);
        NumOut(0, LCD_LINE4, pote);
        TextOut(0, LCD_LINE5, "POkemon"); //??
        Off(MD);
        Off(ME);

        while(1){}


}



void Regula(int iteracoes){
     int i = 0;

     while(i < iteracoes){
        if(MotorTachoCount(MD) > MotorTachoCount(ME)){
            if(poteGlobal < 90){
               poteGlobal += 1;
            }else
               potdGlobal -= 1;

        }else if(MotorTachoCount(MD) < MotorTachoCount(ME)){
            if(potdGlobal < 90){
               potdGlobal += 1;
            }else
               poteGlobal -= 1;
        }
        i++;
     }
     
     
}


void AndaReto(){
     int tachoE = 0, tachoD = 0;
     OnFwd(MD, potdGlobal);
     OnFwd(ME, poteGlobal);
     Regula(10);
     
     while(distanciaTachoCount((tachoE + tachoD)/2)<300*100){
        tachoE = MotorTachoCount(ME);
        tachoD = MotorTachoCount(MD);
        Regula(2);
     }
}
