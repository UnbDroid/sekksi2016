//ComunicaBluetooth

//MACROS
//PARAMETROS (REGULAR!!!! SEMPRE!!!!!)

//CORES
#define AZUL 2
#define VERDE 4
#define BRANCO_MIN 12
#define BRANCO_MAX 17
#define PRETO 0

//DIST
#define distMinParede 8

//LOGICA
#define direita 1
#define esquerda 2
#define tempoVirada 300


//SENSORES E MOTORES
#define MD OUT_B //motor da direita
#define ME OUT_A //motor da esquerda
#define MP OUT_C //motor da porta
#define USD IN_1 //Utrasonico da direita
#define USE IN_2 //Utrasonico da esquerda
#define HTD IN_3//hitech da direita
#define HTE IN_4//hitech da esquerda

//COMUNICACAO BLUETOOTH

#define BT_CONN 1
#define INBOX 1
#define OUTBOX 2

#define VALOR_BOOL 1
#define PORTA_EXECUTIVO 1
#define APAGA_NAOAPAGA false //apaga valor do bluetooth depois de ler, usado na ReceiveRemoteBool

//CONECTA AUTOMATICO
#define CONECTA TRUE
#define NOME_CONSULTOR "LECA" //entre aspas vai o nome do cérebro consultor
#define CONEXAO 1

int my_tc_d;
int my_tc_e;

int distanciaTachoCount(int grau);
void inicializaSensores(void);
bool BTCheck(int conn);
void ConectaBT(void);


//COMUNICACAO BLUETOOTH
bool BTCheck(int conn){// Conn no consultor é 0, no executivo é 1,2 ou 3
 if (!BluetoothStatus(conn)==NO_ERR){
	 TextOut(5,LCD_LINE2,"Error");
	 Wait(100);
	 //Stop(true);
	 return false;
 }else
 	return true;
}


void ConectaBT()
{
     CommBTConnectionType DADOS_BT;      //struct com os dados da conexão a ser feita
     DADOS_BT.Name = NOME_CONSULTOR;
     DADOS_BT.ConnectionSlot = CONEXAO;
     DADOS_BT.Action = CONECTA;
                    //É necessário um tempo para garantir a conexão. Este valor pode ser alterado
     do      //Enquanto a conexão não tiver sido feita com sucesso, o executivo continuará tentando se conectar ao consultor
     {
          SysCommBTConnection(DADOS_BT);
          Wait(2000);
     }while(!BluetoothStatus(1)==NO_ERR)/**/
//sugestão a ser acrescentada: colocar um contador de tempo, para que, caso a conexão
//demore tempo demais a ser criada, ambos os cérebros comecem suas rotinas independentemente


}

bool recebeUSFRENTE(){
	//SendRemoteBool(PORTA_EXECUTIVO, VALOR_BUFFER, VALOR_BOOL);
	byte valor;
	ReceiveRemoteNumber(PORTA_EXECUTIVO, APAGA_NAOAPAGA, valor);
  NumOut(0, LCD_LINE1, valor);
  Wait(1000);
  if (valor == 1)
		return true;
	else
		return false;
}

//=====================================
void inicializaSensores()
{
  SetSensorUltrasonic(USD);
  SetSensorUltrasonic(USE);
  SetSensorLowspeed(HTD);
  SetSensorLowspeed(HTE);
}

task main(){

	inicializaSensores();

	ConectaBT();

  SendRemoteNumber(BT_CONN, OUTBOX, 1);

  while(true){
  /*if(!BTCheck(1)){
		do{
			ConectaBT();
			SendRemoteBool(BT_CONN, OUTBOX, 1);
		}while(!BTCheck(1));
	} */
	OnFwd(MD, 90);
	OnFwd(ME, 90);
	while(recebeUSFRENTE() == false){
	}
	OffEx(MD,0);
	OffEx(ME,0);
	}

}
