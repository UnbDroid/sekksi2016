//SENSORES E MOTORES
#define MD OUT_B //motor da direita
#define ME OUT_A //motor da esquerda
#define MP OUT_C //motor da porta
#define USD IN_1 //Utrasonico da direita
#define USE IN_2 //Utrasonico da esquerda
#define HTD IN_3//hitech da direita
#define HTE IN_4//hitech da esquerda

//DEFINES BLUETOOTH

#define CONECTA TRUE
#define DESCONECTA FALSE
//defines da conexao
#define CONN 1
#define INBOX 1
#define OUTBOX 2
//===========================================

//defines da struct

#define CONSULTOR "LECA"
#define ACAO CONECTA
#define CONEXAO 1



//declaracao de funf

int distanciaGiro(int grau);
void viraEsq(int angulo);
void viraDir(int angulo);
void iniciaBlue(void);

void iniciaBlue(){// FUNCAO INICIA COMUNICACAO BLUETOOTH

     CommBTConnectionType DADOS_BT;
     DADOS_BT.Name = CONSULTOR;
     DADOS_BT.ConnectionSlot = CONEXAO;
     DADOS_BT.Action = ACAO;
     do{
        SysCommBTConnection(DADOS_BT);

        Wait(30);//30 ms eh o tempo de comunicacao minima bluetooth entre dois bricks

     }while(BluetoothStatus(CONEXAO)!= NO_ERR);
     TextOut(0, LCD_LINE1, "Conectou Bluetooth");
}

void desligaBlue(){
     CommBTConnectionType DADOS_BT;
     DADOS_BT.Name = CONSULTOR;
     DADOS_BT.ConnectionSlot = CONEXAO;
     DADOS_BT.Action = DESCONECTA;
     do{
        SysCommBTConnection(DADOS_BT);

        Wait(30);//30 ms eh o tempo de comunicacao minima bluetooth entre dois bricks

     }while(BluetoothStatus(CONEXAO)== NO_ERR);
     TextOut(0, LCD_LINE1, "Desligou Bluetooth");
}


int distanciaGiro(int grau){
	   return (((grau*172)/1420)); // COMO FOI FEITA ESSA CONVERSÃO???
}

void viraEsq(int angulo){ // função que faz o robô girar para a esquerda o ângulo recebido
     OnFwd(MD, 90);
     OnFwd(ME, -90);

     while(distanciaGiro((MotorTachoCount(MD) - MotorTachoCount(ME))/2) < angulo)
     {
      //lol
     }
     Off(MD);
     Off(ME);
}

void viraDir(int angulo){ // função que faz o robô girar para a direita o ângulo recebido
     OnFwd(MD, -90);
     OnFwd(ME, 90);

     while(distanciaGiro((- MotorTachoCount(MD) + MotorTachoCount(ME))/2) < angulo)
     {
      //lol
     }
     Off(MD);
     Off(ME);
}



task main()// programa simples de teste
{
      int aux1 = 0, aux = 0;
      desconectaBlue();
      iniciaBlue();

     while(aux1==0)
     {
          SendRemoteNumber(CONEXAO, OUTBOX, 1);
          ReceiveRemoteNumber(INBOX, true, aux1);
          Wait(30);
     }
     TextOut(30, LCD_LINE2, "passei2");
     
     //Repete a funcao de receber valor do ultrassom
     
     do{

     while(aux==0)
     {
          OnFwd(OUT_A, 60);
          OnFwd(OUT_B, 60);
          Wait(20);
          ReceiveRemoteNumber(INBOX, true, aux);
     }
     if(aux == 1){
          TextOut(30, LCD_LINE3, "passei3");
          viraDir(90);
          Wait(100);
          ReceiveRemoteNumber(INBOX, true, aux);
          Wait(40);
          if(aux == 1){
               viraEsq(180);
               Wait(100);
          }
          else{
               TextOut(30, LCD_LINE4, "funfou");
               Wait(100);
          }
     }

     Off(OUT_A);
     Off(OUT_B);

     Wait(100);

     }while(1);
}
