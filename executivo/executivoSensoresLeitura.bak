/*
    Codigo da equipe KSI da SEK 2016 do c√©rebro EXECUTIVO
    */

//Funcoes necessarias:
/*
  - Andar reto
  - Curva 90 graus
  - Comunicacao bluetooth com Consultor
  - Armazenar posicao em matriz

  -DEBUG
    - Ler todos os sensores


*/


//MACROS
//PARAMETROS (REGULAR!!!! SEMPRE!!!!!)

//CORES
#define AZUL 2
#define VERDE 4
#define BRANCO_MIN 12
#define BRANCO_MAX 17
#define PRETO 0

//DIST
#define distMinParede 8

//LOGICA
#define direita 1
#define esquerda 2


//SENSORES E MOTORES
#define MD OUT_A //motor da direita
#define ME OUT_B //motor da esquerda
#define MP OUT_C //motor da porta
#define USD IN_1 //Utrasonico da direita
#define USE IN_2 //Utrasonico da esquerda
#define HTD IN_3//hitech da direita
#define HTE IN_4//hitech da esquerda



//Var Globais



//declaracoes de funcoes
void inicializaSensores(void);
void retoParedeDireita(void);
void lerSensores(void);
void andaRetoEDaUmaViradinha(void);
void retoParedeSel(int a);

//funcoes de debug
void lerSensores(){
  while(true){
      ClearScreen();
      TextOut(0, LCD_LINE1, "HTD : ",0);
      NumOut(0, LCD_LINE2, SensorHTColorNum(HTD),0);
      TextOut(0, LCD_LINE3, "HTE : ",0);
      NumOut(0, LCD_LINE4, SensorHTColorNum(HTE),0);
      TextOut(0, LCD_LINE5, "USD : ",0);
      NumOut(0, LCD_LINE6, SensorUS(USD),0);
      TextOut(0, LCD_LINE7, "USE : ",0);
      NumOut(0, LCD_LINE8, SensorUS(USE),0);
      Wait(50);
    }
}



//funcao principal
task main()
{
    inicializaSensores();
    lerSensores();
    //retoParedeDireita();

}

//assinatura das funcoes
void inicializaSensores()
{
  SetSensorLowspeed(USD);
  SetSensorLowspeed(USE);
  SetSensorLowspeed(HTD);
  SetSensorLowspeed(HTE);
}



void retoParedeSel(int direcao)
{
   //var locais
    int d, old_d;
    int potd, pote;
    
    potd = 90;
    pote = 90;
    
    OnFwd(MD,potd);
    OnFwd(ME,pote);
    d = SensorUS(USD);
    old_d = d;
    while(1)
    {
      old_d = d;
      d = SensorUS(USD);
      if(d == old_d)
      {
          Wait(300);
      }
      else
      {
        switch(direcao)
        {
          case 1://direita
            if(d<old_d){
                pote--;
              if(potd<90)
                potd++;
              }
            else{
                potd--;
              if(pote<90)
                pote++;
            }    
            OnFwd(MD,potd);
            OnFwd(ME,pote);
          break;

          case 2://esquerda
            if(d<old_d){
                potd--;
                if(pote<90)
                pote++;
              }
            else{
                pote--;
                if(potd<90)
                potd++;
            }
            OnFwd(MD,potd);
            OnFwd(ME,pote);
            break;

          }
      }
    } 
}

void retoParedeDireita()
{
    //var locais
    int d, old_d;
    int potd, pote;
    
    potd = 90;
    pote = 90;
    
    OnFwd(MD,potd);
    OnFwd(ME,pote);
    d = SensorUS(USD);
    old_d = d;
    while(1)
    {
      ClearScreen();
      TextOut(0, LCD_LINE1, "USD : ",0);
      NumOut(0, LCD_LINE2, SensorUS(USD),0);
      old_d = d;
      d = SensorUS(USD);
      if(d == old_d)
      {
          Wait(300);
      }
      else
      {
          if(d<old_d){
              pote--;
              if(potd<90)
                potd++;
              }
          else{
              potd--;
              if(pote<90)
                pote++;
              }
          OnFwd(MD,potd);
          OnFwd(ME,pote);
      }
    }    
}
