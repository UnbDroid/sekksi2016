// Defines de sensores
#define RGB_DIR IN_1
#define RGB_ESQ IN_2
#define RGB_MEIO IN_3
#define US_FRENTE IN_4
// Defines de motores
#define MOTOR_GARRA OUT_A
// Defines de leitura do RGB do meio (ainda precisa testar mais)
#define COR_PRETA_MEIO_MIN 55
#define COR_PRETA_MEIO_MAX 150
#define COR_BRANCA_MEIO_MIN 290
#define COR_BRANCA_MEIO_MAX 630
#define COR_BASE_MEIO_MIN 185
#define COR_BASE_MEIO_MAX 260
// Defines de leitura do RGB da esquerda do robô
#define COR_PRETA_ESQ_PERTO_MIN 75
#define COR_PRETA_ESQ_PERTO_MAX 100
#define COR_PRETA_ESQ_LONGE_MIN 120
#define COR_PRETA_ESQ_LONGE_MAX 160
#define COR_BRANCA_ESQ_PERTO_MIN 470
#define COR_BRANCA_ESQ_PERTO_MAX 495
#define COR_BRANCA_ESQ_LONGE_MIN 212
#define COR_BRANCA_ESQ_LONGE_MAX 245
#define COR_BASE_ESQ_MIN 195
#define COR_BASE_ESQ_MAX 210
// Defines de leitura do RGB da direita do robô
#define COR_PRETA_DIR_PERTO_MIN 130
#define COR_PRETA_DIR_PERTO_MAX 160
#define COR_PRETA_DIR_LONGE_MIN 185
#define COR_PRETA_DIR_LONGE_MAX 210
#define COR_BRANCA_DIR_PERTO_MIN 385
#define COR_BRANCA_DIR_PERTO_MAX 420
#define COR_BRANCA_DIR_LONGE_MIN 240
#define COR_BRANCA_DIR_LONGE_MAX 280
#define COR_BASE_DIR_MIN 240
#define COR_BASE_DIR_MAX 260
//COMUNICACAO BLUETOOTH
#define BT_CONN 1
#define INBOX 1
#define OUTBOX 5
// definoes misc
#define I_MAXIMO_DE_TEMPO_FILTRO 200
//Declaraçoes de funçoes
int identificar_alien();
int testar_cor();
float filter (int s);
bool BTCheck(int conn);
void lerSensores();
bool BTCheck(int conn){
if (!BluetoothStatus(conn)==NO_ERR){
TextOut(5,LCD_LINE2,"Error");
Wait(100);
//Stop(true);
return true;
}
}
float filter (int s) /*passar o sensor como parametro (s = X-1 (de INT_X))*/
{
     float media = 0, alfa = 0.01 ;
     int leitura,i=0;
     leitura = SensorRaw(s);
     media = leitura ;
     while(i<I_MAXIMO_DE_TEMPO_FILTRO){
          leitura = SensorRaw(s);
          media = (1-alfa)*media + alfa*leitura ;
          NumOut(0, LCD_LINE1, media);
          Wait(10);
          ClearScreen();
          i++;
     }
}
void lerSensores(){
  while(true){
      ClearScreen();
      TextOut(0, LCD_LINE7, "USF : ",0);
      NumOut(0, LCD_LINE8, SensorUS(US_FRENTE),0);
      Wait(40);
    }
}
void identificar_alien()
{
    if( SensorRaw(RGB_DIR) > COR_BASE_DIR_MAX || SensorRaw(RGB_DIR) < COR_BASE_DIR_MIN)
    {
         //parar de andar (executivo)
         OnFwd(MOTOR_GARRA, 50);
         Wait(300);
         testar_cor();
    }
    else
    {
         //continua andando e procurando
    }
    return 0;
}
int testar_cor()
{
    if( SensorRaw(RGB_MEIO) > 2 && SensorRaw(RGB_MEIO) < 2 )
    {
         //entrar na rotina de descastar a bolinha
    }
    else
    {
         //entrar na rotina de selecionar a bolinha
    }
}
task main()
{
  SetSensorColorRed(RGB_DIR);
  SetSensorColorRed(RGB_ESQ);
  SetSensorColorRed(RGB_MEIO);
  SetSensorLowspeed(US_FRENTE);
  //filter(2);
  lerSensores();
  /*while(SensorUS(US_FRENTE) < 10){

  }*/
}
